/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.19.4
 * source: proto/paymentcategory/v1/paymentcategory.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../../../google/protobuf/timestamp";
import * as pb_1 from "google-protobuf";
import * as grpc_1 from "@grpc/grpc-js";
export namespace paymentcategory.v1 {
    export class PaymentCategory extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            payment_category_id?: string;
            user_id?: string;
            payment_category_name?: string;
            is_needs?: boolean;
            color_name?: string;
            color_tone?: number;
            created_at?: dependency_1.google.protobuf.Timestamp;
            updated_at?: dependency_1.google.protobuf.Timestamp;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("payment_category_id" in data && data.payment_category_id != undefined) {
                    this.payment_category_id = data.payment_category_id;
                }
                if ("user_id" in data && data.user_id != undefined) {
                    this.user_id = data.user_id;
                }
                if ("payment_category_name" in data && data.payment_category_name != undefined) {
                    this.payment_category_name = data.payment_category_name;
                }
                if ("is_needs" in data && data.is_needs != undefined) {
                    this.is_needs = data.is_needs;
                }
                if ("color_name" in data && data.color_name != undefined) {
                    this.color_name = data.color_name;
                }
                if ("color_tone" in data && data.color_tone != undefined) {
                    this.color_tone = data.color_tone;
                }
                if ("created_at" in data && data.created_at != undefined) {
                    this.created_at = data.created_at;
                }
                if ("updated_at" in data && data.updated_at != undefined) {
                    this.updated_at = data.updated_at;
                }
            }
        }
        get payment_category_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set payment_category_id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get user_id() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set user_id(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get payment_category_name() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set payment_category_name(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get is_needs() {
            return pb_1.Message.getFieldWithDefault(this, 4, false) as boolean;
        }
        set is_needs(value: boolean) {
            pb_1.Message.setField(this, 4, value);
        }
        get color_name() {
            return pb_1.Message.getFieldWithDefault(this, 5, "") as string;
        }
        set color_name(value: string) {
            pb_1.Message.setField(this, 5, value);
        }
        get color_tone() {
            return pb_1.Message.getFieldWithDefault(this, 6, 0) as number;
        }
        set color_tone(value: number) {
            pb_1.Message.setField(this, 6, value);
        }
        get created_at() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 7) as dependency_1.google.protobuf.Timestamp;
        }
        set created_at(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 7, value);
        }
        get has_created_at() {
            return pb_1.Message.getField(this, 7) != null;
        }
        get updated_at() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 8) as dependency_1.google.protobuf.Timestamp;
        }
        set updated_at(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 8, value);
        }
        get has_updated_at() {
            return pb_1.Message.getField(this, 8) != null;
        }
        static fromObject(data: {
            payment_category_id?: string;
            user_id?: string;
            payment_category_name?: string;
            is_needs?: boolean;
            color_name?: string;
            color_tone?: number;
            created_at?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            updated_at?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
        }): PaymentCategory {
            const message = new PaymentCategory({});
            if (data.payment_category_id != null) {
                message.payment_category_id = data.payment_category_id;
            }
            if (data.user_id != null) {
                message.user_id = data.user_id;
            }
            if (data.payment_category_name != null) {
                message.payment_category_name = data.payment_category_name;
            }
            if (data.is_needs != null) {
                message.is_needs = data.is_needs;
            }
            if (data.color_name != null) {
                message.color_name = data.color_name;
            }
            if (data.color_tone != null) {
                message.color_tone = data.color_tone;
            }
            if (data.created_at != null) {
                message.created_at = dependency_1.google.protobuf.Timestamp.fromObject(data.created_at);
            }
            if (data.updated_at != null) {
                message.updated_at = dependency_1.google.protobuf.Timestamp.fromObject(data.updated_at);
            }
            return message;
        }
        toObject() {
            const data: {
                payment_category_id?: string;
                user_id?: string;
                payment_category_name?: string;
                is_needs?: boolean;
                color_name?: string;
                color_tone?: number;
                created_at?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
                updated_at?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            } = {};
            if (this.payment_category_id != null) {
                data.payment_category_id = this.payment_category_id;
            }
            if (this.user_id != null) {
                data.user_id = this.user_id;
            }
            if (this.payment_category_name != null) {
                data.payment_category_name = this.payment_category_name;
            }
            if (this.is_needs != null) {
                data.is_needs = this.is_needs;
            }
            if (this.color_name != null) {
                data.color_name = this.color_name;
            }
            if (this.color_tone != null) {
                data.color_tone = this.color_tone;
            }
            if (this.created_at != null) {
                data.created_at = this.created_at.toObject();
            }
            if (this.updated_at != null) {
                data.updated_at = this.updated_at.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.payment_category_id.length)
                writer.writeString(1, this.payment_category_id);
            if (this.user_id.length)
                writer.writeString(2, this.user_id);
            if (this.payment_category_name.length)
                writer.writeString(3, this.payment_category_name);
            if (this.is_needs != false)
                writer.writeBool(4, this.is_needs);
            if (this.color_name.length)
                writer.writeString(5, this.color_name);
            if (this.color_tone != 0)
                writer.writeInt64(6, this.color_tone);
            if (this.has_created_at)
                writer.writeMessage(7, this.created_at, () => this.created_at.serialize(writer));
            if (this.has_updated_at)
                writer.writeMessage(8, this.updated_at, () => this.updated_at.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): PaymentCategory {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new PaymentCategory();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.payment_category_id = reader.readString();
                        break;
                    case 2:
                        message.user_id = reader.readString();
                        break;
                    case 3:
                        message.payment_category_name = reader.readString();
                        break;
                    case 4:
                        message.is_needs = reader.readBool();
                        break;
                    case 5:
                        message.color_name = reader.readString();
                        break;
                    case 6:
                        message.color_tone = reader.readInt64();
                        break;
                    case 7:
                        reader.readMessage(message.created_at, () => message.created_at = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 8:
                        reader.readMessage(message.updated_at, () => message.updated_at = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): PaymentCategory {
            return PaymentCategory.deserialize(bytes);
        }
    }
    export class FindPaymentCategoriesByUserIdRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            user_id?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("user_id" in data && data.user_id != undefined) {
                    this.user_id = data.user_id;
                }
            }
        }
        get user_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set user_id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data: {
            user_id?: string;
        }): FindPaymentCategoriesByUserIdRequest {
            const message = new FindPaymentCategoriesByUserIdRequest({});
            if (data.user_id != null) {
                message.user_id = data.user_id;
            }
            return message;
        }
        toObject() {
            const data: {
                user_id?: string;
            } = {};
            if (this.user_id != null) {
                data.user_id = this.user_id;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.user_id.length)
                writer.writeString(1, this.user_id);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): FindPaymentCategoriesByUserIdRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new FindPaymentCategoriesByUserIdRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.user_id = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): FindPaymentCategoriesByUserIdRequest {
            return FindPaymentCategoriesByUserIdRequest.deserialize(bytes);
        }
    }
    export class FindPaymentCategoriesByUserIdResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            payment_categories?: PaymentCategory[];
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("payment_categories" in data && data.payment_categories != undefined) {
                    this.payment_categories = data.payment_categories;
                }
            }
        }
        get payment_categories() {
            return pb_1.Message.getRepeatedWrapperField(this, PaymentCategory, 1) as PaymentCategory[];
        }
        set payment_categories(value: PaymentCategory[]) {
            pb_1.Message.setRepeatedWrapperField(this, 1, value);
        }
        static fromObject(data: {
            payment_categories?: ReturnType<typeof PaymentCategory.prototype.toObject>[];
        }): FindPaymentCategoriesByUserIdResponse {
            const message = new FindPaymentCategoriesByUserIdResponse({});
            if (data.payment_categories != null) {
                message.payment_categories = data.payment_categories.map(item => PaymentCategory.fromObject(item));
            }
            return message;
        }
        toObject() {
            const data: {
                payment_categories?: ReturnType<typeof PaymentCategory.prototype.toObject>[];
            } = {};
            if (this.payment_categories != null) {
                data.payment_categories = this.payment_categories.map((item: PaymentCategory) => item.toObject());
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.payment_categories.length)
                writer.writeRepeatedMessage(1, this.payment_categories, (item: PaymentCategory) => item.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): FindPaymentCategoriesByUserIdResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new FindPaymentCategoriesByUserIdResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.payment_categories, () => pb_1.Message.addToRepeatedWrapperField(message, 1, PaymentCategory.deserialize(reader), PaymentCategory));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): FindPaymentCategoriesByUserIdResponse {
            return FindPaymentCategoriesByUserIdResponse.deserialize(bytes);
        }
    }
    interface GrpcUnaryServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
    }
    interface GrpcStreamServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
        (message: P, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
    }
    interface GrpWritableServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
    }
    interface GrpcChunkServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
        (options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
    }
    interface GrpcPromiseServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): Promise<R>;
        (message: P, options?: grpc_1.CallOptions): Promise<R>;
    }
    export abstract class UnimplementedPaymentCategoryServiceService {
        static definition = {
            FindPaymentCategoriesByUserId: {
                path: "/paymentcategory.v1.PaymentCategoryService/FindPaymentCategoriesByUserId",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: FindPaymentCategoriesByUserIdRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => FindPaymentCategoriesByUserIdRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: FindPaymentCategoriesByUserIdResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => FindPaymentCategoriesByUserIdResponse.deserialize(new Uint8Array(bytes))
            }
        };
        [method: string]: grpc_1.UntypedHandleCall;
        abstract FindPaymentCategoriesByUserId(call: grpc_1.ServerUnaryCall<FindPaymentCategoriesByUserIdRequest, FindPaymentCategoriesByUserIdResponse>, callback: grpc_1.sendUnaryData<FindPaymentCategoriesByUserIdResponse>): void;
    }
    export class PaymentCategoryServiceClient extends grpc_1.makeGenericClientConstructor(UnimplementedPaymentCategoryServiceService.definition, "PaymentCategoryService", {}) {
        constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>) {
            super(address, credentials, options);
        }
        FindPaymentCategoriesByUserId: GrpcUnaryServiceInterface<FindPaymentCategoriesByUserIdRequest, FindPaymentCategoriesByUserIdResponse> = (message: FindPaymentCategoriesByUserIdRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<FindPaymentCategoriesByUserIdResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<FindPaymentCategoriesByUserIdResponse>, callback?: grpc_1.requestCallback<FindPaymentCategoriesByUserIdResponse>): grpc_1.ClientUnaryCall => {
            return super.FindPaymentCategoriesByUserId(message, metadata, options, callback);
        };
    }
}
